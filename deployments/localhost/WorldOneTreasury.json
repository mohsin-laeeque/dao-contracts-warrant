{
  "address": "0x948B3c65b89DF0B4894ABE91E6D02FE579834F8F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_WorldOne",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_MIM",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_secondsNeededForQueue",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_limitAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum WorldOneTreasury.MANAGING",
          "name": "managing",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "activated",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "ChangeActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ChangeLimitAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum WorldOneTreasury.MANAGING",
          "name": "managing",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "queued",
          "type": "address"
        }
      ],
      "name": "ChangeQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CreateDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalReserves",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidExtra",
          "type": "uint256"
        }
      ],
      "name": "Payback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RepayDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesAudited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReservesManaged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalWithdrawal",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ReserveManagerQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WorldOne",
      "outputs": [
        {
          "internalType": "contract IWorldOneERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addBack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "convertToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "debtorBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "debtorQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "debtors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "send_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hourlyLimitAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hourlyLimitQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDebtor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isReserveDepositor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isReserveManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isReserveSpender",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isReserveToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRewardManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum WorldOneTreasury.MANAGING",
          "name": "_managing",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "queue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reserveDepositorQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserveDepositors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserveManagers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reserveSpenderQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserveSpenders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reserveTokenQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserveTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardManagerQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewardManagers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsNeededForQueue",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setLimitAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_depo",
          "type": "address"
        }
      ],
      "name": "setWarrantDepository",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum WorldOneTreasury.MANAGING",
          "name": "_managing",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "toggle",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "direct",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "renounce",
          "type": "bool"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "valueOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "warrantDepository",
      "outputs": [
        {
          "internalType": "contract IWarrantDepository",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xea3c692e913eb9f108522c4e6fd373d60bbb9da8549ee9cd46c09f01470d43c9",
  "receipt": {
    "to": null,
    "from": "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "contractAddress": "0x948B3c65b89DF0B4894ABE91E6D02FE579834F8F",
    "transactionIndex": 0,
    "gasUsed": "2138250",
    "logsBloom": "0x
    "blockHash": "0x2afed4bd3395e190c38bbba4ccaf00328f5828d9145b6cf8d1379edb8a45de42",
    "transactionHash": "0xea3c692e913eb9f108522c4e6fd373d60bbb9da8549ee9cd46c09f01470d43c9",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0xea3c692e913eb9f108522c4e6fd373d60bbb9da8549ee9cd46c09f01470d43c9",
        "address": "0x948B3c65b89DF0B4894ABE91E6D02FE579834F8F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c8"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2afed4bd3395e190c38bbba4ccaf00328f5828d9145b6cf8d1379edb8a45de42"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "2138250",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x71C95911E9a5D330f4D621842EC243EE1343292e",
    "0x8464135c8F25Da09e49BC8782676a84730C318bC",
    0,
    1000000000000
  ],
  "numDeployments": 1,
  "solcInputHash": "45a14746823614a7cbb59a1f45556a27",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WorldOne\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_MIM\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_secondsNeededForQueue\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_limitAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum WorldOneTreasury.MANAGING\",\"name\":\"managing\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"activated\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"ChangeActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ChangeLimitAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum WorldOneTreasury.MANAGING\",\"name\":\"managing\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"queued\",\"type\":\"address\"}],\"name\":\"ChangeQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CreateDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidExtra\",\"type\":\"uint256\"}],\"name\":\"Payback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RepayDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesAudited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReservesManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWithdrawal\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ReserveManagerQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WorldOne\",\"outputs\":[{\"internalType\":\"contract IWorldOneERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"convertToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtorQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"debtors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"send_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hourlyLimitAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hourlyLimitQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDebtor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveDepositor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveSpender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRewardManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum WorldOneTreasury.MANAGING\",\"name\":\"_managing\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"queue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveDepositorQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveDepositors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveSpenderQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveSpenders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveTokenQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardManagerQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondsNeededForQueue\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setLimitAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depo\",\"type\":\"address\"}],\"name\":\"setWarrantDepository\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum WorldOneTreasury.MANAGING\",\"name\":\"_managing\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"toggle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"direct\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renounce\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"valueOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"warrantDepository\",\"outputs\":[{\"internalType\":\"contract IWarrantDepository\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addBack(uint256,address)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}},\"convertToken(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"},\"returns\":{\"value_\":\"uint\"}},\"deposit(uint256,address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_fee\":\"uint\",\"_token\":\"address\"},\"returns\":{\"send_\":\"uint\"}},\"getTotalReserves()\":{\"returns\":{\"_0\":\"totalReserves uint\"}},\"queue(uint8,address)\":{\"params\":{\"_address\":\"address\",\"_managing\":\"MANAGING\"},\"returns\":{\"_0\":\"bool\"}},\"setWarrantDepository(address)\":{\"params\":{\"_depo\":\"address\"}},\"toggle(uint8,address)\":{\"params\":{\"_address\":\"address\",\"_managing\":\"MANAGING\"},\"returns\":{\"_0\":\"bool\"}},\"transferOwnership(address,bool,bool)\":{\"params\":{\"direct\":\"True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.\",\"newOwner\":\"Address of the new owner.\",\"renounce\":\"Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise.\"}},\"valueOf(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"},\"returns\":{\"value_\":\"uint\"}},\"withdraw(uint256,address)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addBack(uint256,address)\":{\"notice\":\"allow approved address to add funds back in treasury\"},\"claimOwnership()\":{\"notice\":\"Needs to be called by `pendingOwner` to claim ownership.\"},\"convertToken(address,uint256)\":{\"notice\":\"convert token decimals to match WorldOne decimals\"},\"deposit(uint256,address,uint256)\":{\"notice\":\"allow approved address to deposit an asset for WorldOne\"},\"getTotalReserves()\":{\"notice\":\"get total reserves that treasury has\"},\"queue(uint8,address)\":{\"notice\":\"queue address to change boolean in mapping\"},\"setWarrantDepository(address)\":{\"notice\":\"Set warrant depository address for treasury\"},\"toggle(uint8,address)\":{\"notice\":\"verify queue then set boolean in mapping\"},\"transferOwnership(address,bool,bool)\":{\"notice\":\"Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`.\"},\"valueOf(address,uint256)\":{\"notice\":\"returns WorldOne valuation of asset\"},\"withdraw(uint256,address)\":{\"notice\":\"allow approved address to withdraw reserves\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"WorldOneTreasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\n\\nimport \\\"./libs/LowGasSafeMath.sol\\\";\\nimport \\\"./libs/SafeERC20.sol\\\";\\nimport \\\"./interfaces/ITreasury.sol\\\";\\nimport \\\"./utils/Ownable.sol\\\";\\nimport \\\"./interfaces/IERC20Mintable.sol\\\";\\nimport \\\"./interfaces/IWorldOneERC20.sol\\\";\\nimport \\\"./interfaces/IWarrantDepository.sol\\\";\\n\\ncontract WorldOneTreasury is Ownable {\\n\\n    using LowGasSafeMath for uint;\\n    using LowGasSafeMath for uint32;\\n    using SafeERC20 for IERC20;\\n\\n    event Deposit( address indexed token, uint amount, uint value );\\n    event Withdrawal( address indexed token, uint amount, uint totalWithdrawal );\\n    event CreateDebt( address indexed debtor, address indexed token, uint amount, uint value );\\n    event RepayDebt( address indexed debtor, address indexed token, uint amount, uint value );\\n    event Payback( address indexed token, uint amount, uint totalReserves, uint paidExtra );\\n    event ReservesManaged( address indexed token, uint amount );\\n    event ReservesUpdated( uint indexed totalReserves );\\n    event ReservesAudited( uint indexed totalReserves );\\n    event ChangeQueued( MANAGING indexed managing, address queued );\\n    event ChangeActivated( MANAGING indexed managing, address activated, bool result );\\n    event ChangeLimitAmount( uint256 amount );\\n\\n    enum MANAGING { \\n        RESERVEDEPOSITOR, \\n        RESERVESPENDER, \\n        RESERVETOKEN, \\n        RESERVEMANAGER, \\n        DEBTOR, \\n        REWARDMANAGER\\n    }\\n\\n    IWorldOneERC20 public immutable WorldOne;\\n    uint32 public immutable secondsNeededForQueue;\\n    IWarrantDepository public warrantDepository;\\n\\n    address[] public reserveTokens; // Push only, beware false-positives.\\n    mapping( address => bool ) public isReserveToken;\\n    mapping( address => uint32 ) public reserveTokenQueue; // Delays changes to mapping.\\n\\n    address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n    mapping( address => bool ) public isReserveDepositor;\\n    mapping( address => uint32 ) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n    address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n    mapping( address => bool ) public isReserveSpender;\\n    mapping( address => uint32 ) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n    address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n    mapping( address => bool ) public isReserveManager;\\n    mapping( address => uint32 ) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n    address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n    mapping( address => bool ) public isDebtor;\\n    mapping( address => uint32 ) public debtorQueue; // Delays changes to mapping.\\n    mapping( address => uint ) public debtorBalance;\\n\\n    address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n    mapping( address => bool ) public isRewardManager;\\n    mapping( address => uint32 ) public rewardManagerQueue; // Delays changes to mapping.\\n\\n    mapping( address => uint256 ) public hourlyLimitAmounts; // tracks amounts\\n    mapping( address => uint32 ) public hourlyLimitQueue; // Delays changes to mapping.\\n\\n    uint256 public limitAmount;\\n    \\n    uint public totalReserves; // Risk-free value of all assets\\n    uint public totalWithdraw;\\n\\n    constructor (\\n        address _WorldOne,\\n        address _MIM,\\n        uint32 _secondsNeededForQueue,\\n        uint256 _limitAmount\\n    ) {\\n        require( _WorldOne != address(0) );\\n        WorldOne = IWorldOneERC20(_WorldOne);\\n\\n        isReserveToken[ _MIM ] = true;\\n        reserveTokens.push( _MIM );\\n\\n        secondsNeededForQueue = _secondsNeededForQueue;\\n        limitAmount = _limitAmount;\\n    }\\n\\n    function setLimitAmount(uint amount) external onlyOwner {\\n        limitAmount = amount;\\n        emit ChangeLimitAmount(limitAmount);\\n    }\\n\\n    /**\\n        @notice allow approved address to deposit an asset for WorldOne\\n        @param _amount uint\\n        @param _token address\\n        @param _fee uint\\n        @return send_ uint\\n     */\\n    function deposit( uint _amount, address _token, uint _fee ) external returns ( uint send_ ) {\\n        require( isReserveToken[ _token ], \\\"Not accepted\\\" );\\n        uint value = convertToken(_token, _amount);\\n        send_ = valueOf(_token, _amount);\\n        send_ = send_.add( _fee );\\n\\n        IERC20( _token ).safeTransferFrom( msg.sender, address(this), _amount );\\n\\n        if ( isReserveToken[ _token ] ) {\\n            require( isReserveDepositor[ msg.sender ], \\\"Not approved\\\" );\\n        }\\n        WorldOne.mint( msg.sender, send_ );\\n\\n        totalReserves = totalReserves.add( value );\\n        emit ReservesUpdated( totalReserves );\\n\\n        emit Deposit( _token, _amount, value );\\n    }\\n\\n    /**\\n        @notice allow approved address to withdraw reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n    function withdraw( uint _amount, address _token ) external {\\n        require( isReserveToken[ _token ], \\\"Not accepted\\\" ); // Only reserves can be used for redemptions\\n        require( isReserveSpender[ msg.sender ], \\\"Not approved\\\" );\\n        require ( _amount <= totalReserves, \\\"Cannot withdraw more than treasury currently holds\\\");\\n        totalWithdraw = totalWithdraw.add( _amount );\\n        IERC20( _token ).safeTransfer( msg.sender, _amount );\\n\\n        emit Withdrawal( _token, _amount, totalWithdraw );\\n    }\\n\\n    /**\\n        @notice allow approved address to add funds back in treasury\\n        @param _amount uint\\n        @param _token address\\n     */\\n\\n    function addBack(uint _amount, address _token) external {\\n        require( isReserveToken[ _token ], \\\"Not accepted\\\" ); // Only reserves can be used for redemptions\\n        require( isReserveSpender[ msg.sender ], \\\"Not approved\\\" );\\n        uint balance;\\n        if ( totalWithdraw >= _amount ) {\\n            totalWithdraw = totalWithdraw.sub( _amount );\\n        } else {\\n            balance = _amount.sub( totalWithdraw );\\n            totalReserves = totalReserves.add( balance );\\n            totalWithdraw = 0;\\n        }\\n        IERC20( _token ).safeTransferFrom( msg.sender, address(this), _amount );\\n        emit Payback( _token, _amount, totalReserves, balance);\\n\\n    }\\n\\n    /**\\n        @notice Set warrant depository address for treasury\\n        @param _depo address\\n     */\\n    function setWarrantDepository(address _depo) external onlyOwner {\\n        warrantDepository = IWarrantDepository(_depo);\\n    }\\n\\n    /**\\n        @notice get total reserves that treasury has\\n        @return totalReserves uint\\n     */\\n    function getTotalReserves() external view returns (uint) {\\n        return totalReserves;\\n    }\\n    \\n    \\n    /**\\n        @notice returns WorldOne valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n    function valueOf( address _token, uint _amount ) public view returns ( uint value_ ) {\\n        if ( isReserveToken[ _token ] ) {\\n            // convert amount to match WorldOne decimals\\n            value_ = convertToken( _token, _amount );\\n            value_ = warrantDepository.valueOf(value_);\\n        }\\n    }\\n\\n    /**\\n        @notice convert token decimals to match WorldOne decimals\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n    function convertToken( address _token, uint _amount ) public view returns ( uint value_ ) {\\n        if ( isReserveToken[ _token ] ) {\\n            // convert amount to match WorldOne decimals\\n            value_ = _amount.mul( 10 ** WorldOne.decimals() ).div( 10 ** IERC20( _token ).decimals() );\\n        }\\n    }\\n\\n    /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n    function queue( MANAGING _managing, address _address ) external onlyOwner returns ( bool ) {\\n        require( _address != address(0), \\\"IA\\\" );\\n        if ( _managing == MANAGING.RESERVEDEPOSITOR ) { // 0\\n            reserveDepositorQueue[ _address ] = uint32(block.timestamp).add32( secondsNeededForQueue );\\n        } else if ( _managing == MANAGING.RESERVESPENDER ) { // 1\\n            reserveSpenderQueue[ _address ] = uint32(block.timestamp).add32( secondsNeededForQueue );\\n        } else if ( _managing == MANAGING.RESERVETOKEN ) { // 2\\n            reserveTokenQueue[ _address ] = uint32(block.timestamp).add32( secondsNeededForQueue );\\n        } else if ( _managing == MANAGING.RESERVEMANAGER ) { // 3\\n            ReserveManagerQueue[ _address ] = uint32(block.timestamp).add32( secondsNeededForQueue.mul32( 2 ) );\\n        } else if ( _managing == MANAGING.DEBTOR ) { // 7\\n            debtorQueue[ _address ] = uint32(block.timestamp).add32( secondsNeededForQueue );\\n        } else if ( _managing == MANAGING.REWARDMANAGER ) { // 8\\n            rewardManagerQueue[ _address ] = uint32(block.timestamp).add32( secondsNeededForQueue );\\n        } else return false;\\n\\n        emit ChangeQueued( _managing, _address );\\n        return true;\\n    }\\n\\n    /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n    function toggle(\\n        MANAGING _managing, \\n        address _address\\n    ) external onlyOwner returns ( bool ) {\\n        require( _address != address(0), \\\"IA\\\" );\\n        bool result;\\n        if ( _managing == MANAGING.RESERVEDEPOSITOR ) { // 0\\n            if ( requirements( reserveDepositorQueue, isReserveDepositor, _address ) ) {\\n                reserveDepositorQueue[ _address ] = 0;\\n                if( !listContains( reserveDepositors, _address ) ) {\\n                    reserveDepositors.push( _address );\\n                }\\n            }\\n            result = !isReserveDepositor[ _address ];\\n            isReserveDepositor[ _address ] = result;\\n            \\n        } else if ( _managing == MANAGING.RESERVESPENDER ) { // 1\\n            if ( requirements( reserveSpenderQueue, isReserveSpender, _address ) ) {\\n                reserveSpenderQueue[ _address ] = 0;\\n                if( !listContains( reserveSpenders, _address ) ) {\\n                    reserveSpenders.push( _address );\\n                }\\n            }\\n            result = !isReserveSpender[ _address ];\\n            isReserveSpender[ _address ] = result;\\n\\n        } else if ( _managing == MANAGING.RESERVETOKEN ) { // 2\\n            if ( requirements( reserveTokenQueue, isReserveToken, _address ) ) {\\n                reserveTokenQueue[ _address ] = 0;\\n                if( !listContains( reserveTokens, _address ) ) {\\n                    reserveTokens.push( _address );\\n                }\\n            }\\n            result = !isReserveToken[ _address ];\\n            isReserveToken[ _address ] = result;\\n\\n        } else if ( _managing == MANAGING.RESERVEMANAGER ) { // 3\\n            if ( requirements( ReserveManagerQueue, isReserveManager, _address ) ) {\\n                reserveManagers.push( _address );\\n                ReserveManagerQueue[ _address ] = 0;\\n                if( !listContains( reserveManagers, _address ) ) {\\n                    reserveManagers.push( _address );\\n                }\\n            }\\n            result = !isReserveManager[ _address ];\\n            isReserveManager[ _address ] = result;\\n\\n        } else if ( _managing == MANAGING.DEBTOR ) { // 7\\n            if ( requirements( debtorQueue, isDebtor, _address ) ) {\\n                debtorQueue[ _address ] = 0;\\n                if( !listContains( debtors, _address ) ) {\\n                    debtors.push( _address );\\n                }\\n            }\\n            result = !isDebtor[ _address ];\\n            isDebtor[ _address ] = result;\\n\\n        } else if ( _managing == MANAGING.REWARDMANAGER ) { // 8\\n            if ( requirements( rewardManagerQueue, isRewardManager, _address ) ) {\\n                rewardManagerQueue[ _address ] = 0;\\n                if( !listContains( rewardManagers, _address ) ) {\\n                    rewardManagers.push( _address );\\n                }\\n            }\\n            result = !isRewardManager[ _address ];\\n            isRewardManager[ _address ] = result;\\n\\n        } else return false;\\n\\n        emit ChangeActivated( _managing, _address, result );\\n        return true;\\n    }\\n\\n    /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n    function requirements( \\n        mapping( address => uint32 ) storage queue_, \\n        mapping( address => bool ) storage status_, \\n        address _address \\n    ) internal view returns ( bool ) {\\n        if ( !status_[ _address ] ) {\\n            require( queue_[ _address ] != 0, \\\"Must queue\\\" );\\n            require( queue_[ _address ] <= uint32(block.timestamp), \\\"Queue not expired\\\" );\\n            return true;\\n        } return false;\\n    }\\n\\n    /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n    function listContains( address[] storage _list, address _token ) internal view returns ( bool ) {\\n        for( uint i = 0; i < _list.length; i++ ) {\\n            if( _list[ i ] == _token ) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n}\",\"keccak256\":\"0xf40a642c8b6b71698adafa9953438b583aac310423f1e09b1f015225a36b6dd9\",\"license\":\"Proprietary\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\n\\ninterface IERC20 {\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n    * @dev Returns the amount of tokens in existence.\\n    */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n    * @dev Returns the amount of tokens owned by `account`.\\n    */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n    * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n    *\\n    * Returns a boolean value indicating whether the operation succeeded.\\n    *\\n    * Emits a {Transfer} event.\\n    */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n    * @dev Returns the remaining number of tokens that `spender` will be\\n    * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n    * zero by default.\\n    *\\n    * This value changes when {approve} or {transferFrom} are called.\\n    */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n    * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n    *\\n    * Returns a boolean value indicating whether the operation succeeded.\\n    *\\n    * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n    * that someone may use both the old and the new allowance by unfortunate\\n    * transaction ordering. One possible solution to mitigate this race\\n    * condition is to first reduce the spender's allowance to 0 and set the\\n    * desired value afterwards:\\n    * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n    *\\n    * Emits an {Approval} event.\\n    */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n    * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n    * allowance mechanism. `amount` is then deducted from the caller's\\n    * allowance.\\n    *\\n    * Returns a boolean value indicating whether the operation succeeded.\\n    *\\n    * Emits a {Transfer} event.\\n    */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n    * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n    * another (`to`).\\n    *\\n    * Note that `value` may be zero.\\n    */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n    * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n    * a call to {approve}. `value` is the new allowance.\\n    */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0xc6b6f00344272f1489e357c9727917fe2336d718e0ab1f2e5283d1a650a9a001\",\"license\":\"Proprietary\"},\"contracts/interfaces/IERC20Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\n\\ninterface IERC20Mintable {\\n  function mint( uint256 amount_ ) external;\\n\\n  function mint( address account_, uint256 ammount_ ) external;\\n}\",\"keccak256\":\"0x5ded0723c8683e4b19ec3779df3dab1acbeab8b5d96c2438949b53941e419523\",\"license\":\"Proprietary\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\n\\ninterface ITreasury {\\n    function deposit( uint _amount, address _token, uint _fee ) external returns ( uint );\\n    function valueOf( address _token, uint _amount ) external view returns ( uint value_ );\\n    function convertToken( address _token, uint _amount ) external view returns ( uint value_ );\\n    function getTotalReserves() external view returns (uint);\\n}\",\"keccak256\":\"0x41230c7f6fb6ad7c76c2e5c00a75929a66a91632118755aceaf693f60b4a8ca4\",\"license\":\"Proprietary\"},\"contracts/interfaces/IWarrantDepository.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\n\\ninterface IWarrantDepository {\\n    function valueOf( uint _amount ) external view returns ( uint );\\n}\",\"keccak256\":\"0x50eeab43e2660bea8e84171d21c31d1a439c1285f394d56c2fcdaa5db1f7701c\",\"license\":\"Proprietary\"},\"contracts/interfaces/IWorldOneERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\nimport \\\"./IERC20Mintable.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\n\\n\\ninterface IWorldOneERC20 is IERC20Mintable, IERC20 {\\n    function burnFrom(address account_, uint256 amount_) external;\\n}\",\"keccak256\":\"0xd68e36bdf4729e2e0d3781fb78df93cf14f8799d7e9e2015e47b906b75e16a0e\",\"license\":\"Proprietary\"},\"contracts/libs/Address.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\n\\nlibrary Address {\\n\\n      function isContract(address account) internal view returns (bool) {\\n        // This method relies in extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    function functionCall(\\n        address target, \\n        bytes memory data, \\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    function functionCallWithValue(\\n        address target, \\n        bytes memory data, \\n        uint256 value, \\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(\\n        address target, \\n        bytes memory data, \\n        uint256 weiValue, \\n        string memory errorMessage\\n    ) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    function functionStaticCall(\\n        address target, \\n        bytes memory data, \\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    function functionDelegateCall(\\n        address target, \\n        bytes memory data, \\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success, \\n        bytes memory returndata, \\n        string memory errorMessage\\n    ) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            if (returndata.length > 0) {\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n\\n    function addressToString(address _address) internal pure returns(string memory) {\\n        bytes32 _bytes = bytes32(uint256(_address));\\n        bytes memory HEX = \\\"0123456789abcdef\\\";\\n        bytes memory _addr = new bytes(42);\\n\\n        _addr[0] = '0';\\n        _addr[1] = 'x';\\n\\n        for(uint256 i = 0; i < 20; i++) {\\n            _addr[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)];\\n            _addr[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\\n        }\\n\\n        return string(_addr);\\n\\n    }\\n}\",\"keccak256\":\"0x17fb845261df22b7d522fb5bda1946386075d07f9abc19a7c7d88a682e996190\",\"license\":\"Proprietary\"},\"contracts/libs/LowGasSafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\n\\nlibrary LowGasSafeMath {\\n    /// @notice Returns x + y, reverts if sum overflows uint256\\n    /// @param x The augend\\n    /// @param y The addend\\n    /// @return z The sum of x and y\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    function add32(uint32 x, uint32 y) internal pure returns (uint32 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    /// @notice Returns x - y, reverts if underflows\\n    /// @param x The minuend\\n    /// @param y The subtrahend\\n    /// @return z The difference of x and y\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n    function sub32(uint32 x, uint32 y) internal pure returns (uint32 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n    /// @notice Returns x * y, reverts if overflows\\n    /// @param x The multiplicand\\n    /// @param y The multiplier\\n    /// @return z The product of x and y\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(x == 0 || (z = x * y) / x == y);\\n    }\\n\\n    function mul32(uint32 x, uint32 y) internal pure returns (uint32 z) {\\n        require(x == 0 || (z = x * y) / x == y);\\n    }\\n\\n    /// @notice Returns x + y, reverts if overflows or underflows\\n    /// @param x The augend\\n    /// @param y The addend\\n    /// @return z The sum of x and y\\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\\n        require((z = x + y) >= x == (y >= 0));\\n    }\\n\\n    /// @notice Returns x - y, reverts if overflows or underflows\\n    /// @param x The minuend\\n    /// @param y The subtrahend\\n    /// @return z The difference of x and y\\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\\n        require((z = x - y) <= x == (y >= 0));\\n    }\\n\\n    function div(uint256 x, uint256 y) internal pure returns(uint256 z){\\n        require(y > 0);\\n        z=x/y;\\n    }\\n}\",\"keccak256\":\"0x41371a57685dfcdc58f6bb9f7efa53918003fa041b666574a526ce8a1714f8da\",\"license\":\"Proprietary\"},\"contracts/libs/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\n\\nimport \\\"./LowGasSafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\nimport \\\"./../interfaces/IERC20.sol\\\";\\n\\nlibrary SafeERC20 {\\n    using LowGasSafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender)\\n            .sub(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf3398c7d3224764a81e0617ac794f0a64f2936c0581f8b984d3d9f29343336d4\",\"license\":\"Proprietary\"},\"contracts/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: Proprietary\\npragma solidity 0.7.5;\\n\\ncontract OwnableData {\\n    address public owner;\\n    address public pendingOwner;\\n}\\n\\ncontract Ownable is OwnableData {\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice `owner` defaults to msg.sender on construction.\\n    constructor() {\\n        owner = msg.sender;\\n        emit OwnershipTransferred(address(0), msg.sender);\\n    }\\n\\n    /// @notice Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner.\\n    /// Can only be invoked by the current `owner`.\\n    /// @param newOwner Address of the new owner.\\n    /// @param direct True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.\\n    /// @param renounce Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise.\\n    function transferOwnership(\\n        address newOwner,\\n        bool direct,\\n        bool renounce\\n    ) public onlyOwner {\\n        if (direct) {\\n            // Checks\\n            require(newOwner != address(0) || renounce, \\\"Ownable: zero address\\\");\\n\\n            // Effects\\n            emit OwnershipTransferred(owner, newOwner);\\n            owner = newOwner;\\n            pendingOwner = address(0);\\n        } else {\\n            // Effects\\n            pendingOwner = newOwner;\\n        }\\n    }\\n\\n    /// @notice Needs to be called by `pendingOwner` to claim ownership.\\n    function claimOwnership() public {\\n        address _pendingOwner = pendingOwner;\\n\\n        // Checks\\n        require(msg.sender == _pendingOwner, \\\"Ownable: caller != pending owner\\\");\\n\\n        // Effects\\n        emit OwnershipTransferred(owner, _pendingOwner);\\n        owner = _pendingOwner;\\n        pendingOwner = address(0);\\n    }\\n\\n    /// @notice Only allows the `owner` to execute the function.\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x93b5c70d69005cca90315fb2649d873bbaa486bca86d58ce733b9a52c81c2aed\",\"license\":\"Proprietary\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161251b38038061251b8339818101604052608081101561003357600080fd5b5080516020820151604080840151606090940151600080546001600160a01b0319163390811782559251949593949192917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b03841661009c57600080fd5b6001600160601b0319606085901b166080526001600160a01b039283166000818152600460205260408120805460ff1916600190811790915560038054918201815582527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319169092179091556001600160e01b031960e084901b1660a052601891909155919092169163ffffffff169061239e9061017d903980610d0a52806119be5280611a3b5280611ab85280611b345280611bc65280611c43525080610f8d528061101c5280611198525061239e6000f3fe608060405234801561001057600080fd5b50600436106102525760003560e01c806389e36bc611610146578063cd85641a116100c3578063e83afee311610087578063e83afee3146106b8578063ebd83cd8146106e7578063ee4e19a11461070d578063f15df14d14610733578063f4f3683e14610759578063fb9395881461077f57610252565b8063cd85641a14610618578063d031370b1461063e578063d5e8be0d1461065b578063d9797ff41461068a578063e30c3978146106b057610252565b8063ac1f15c41161010a578063ac1f15c414610575578063b1bd38b01461057d578063b5b1d560146105a3578063bc157ac1146105c0578063c24ad43e146105f257610252565b806389e36bc6146104e75780638da5cb5b146105135780638f840ddd1461051b578063932cc8c314610523578063a60cf5ac1461054957610252565b8063455fd623116101d4578063788c6c0111610198578063788c6c011461045557806378abafaf146104945780637a8960d81461049c578063869871bf146104a457806387d67dff146104c157610252565b8063455fd623146103dc5780634e71e0c8146103e45780634e83423c146103ec57806368c31dd5146104125780636b5e40a71461043857610252565b80631eec5a9a1161021b5780631eec5a9a146103665780631f107a4514610392578063242693d3146103af57806331dad7af146103b7578063437f7912146103bf57610252565b8062f714ce146102575780630619aff114610285578063078dfbe7146102be578063094a8651146102f4578063124154ca1461032c575b600080fd5b6102836004803603604081101561026d57600080fd5b50803590602001356001600160a01b03166107a5565b005b6102a26004803603602081101561029b57600080fd5b5035610905565b604080516001600160a01b039092168252519081900360200190f35b610283600480360360608110156102d457600080fd5b506001600160a01b0381351690602081013515159060400135151561092f565b61031a6004803603602081101561030a57600080fd5b50356001600160a01b0316610a65565b60408051918252519081900360200190f35b6103526004803603602081101561034257600080fd5b50356001600160a01b0316610a77565b604080519115158252519081900360200190f35b61031a6004803603604081101561037c57600080fd5b506001600160a01b038135169060200135610a8c565b610283600480360360208110156103a857600080fd5b5035610b3b565b61031a610bc3565b6102a2610bc9565b6102a2600480360360208110156103d557600080fd5b5035610bd8565b61031a610be8565b610283610bee565b6103526004803603602081101561040257600080fd5b50356001600160a01b0316610cb0565b6103526004803603602081101561042857600080fd5b50356001600160a01b0316610cc5565b6102a26004803603602081101561044e57600080fd5b5035610cda565b61047b6004803603602081101561046b57600080fd5b50356001600160a01b0316610cea565b6040805163ffffffff9092168252519081900360200190f35b61031a610d02565b61047b610d08565b6102a2600480360360208110156104ba57600080fd5b5035610d2c565b610352600480360360208110156104d757600080fd5b50356001600160a01b0316610d3c565b610283600480360360408110156104fd57600080fd5b50803590602001356001600160a01b0316610d51565b6102a2610eb0565b61031a610ebf565b61047b6004803603602081101561053957600080fd5b50356001600160a01b0316610ec5565b61031a6004803603604081101561055f57600080fd5b506001600160a01b038135169060200135610edd565b6102a261101a565b61047b6004803603602081101561059357600080fd5b50356001600160a01b031661103e565b6102a2600480360360208110156105b957600080fd5b5035611056565b61031a600480360360608110156105d657600080fd5b508035906001600160a01b036020820135169060400135611066565b61047b6004803603602081101561060857600080fd5b50356001600160a01b031661127e565b61047b6004803603602081101561062e57600080fd5b50356001600160a01b0316611296565b6102a26004803603602081101561065457600080fd5b50356112ae565b6103526004803603604081101561067157600080fd5b50803560ff1690602001356001600160a01b03166112be565b61047b600480360360208110156106a057600080fd5b50356001600160a01b03166118e7565b6102a26118ff565b610352600480360360408110156106ce57600080fd5b50803560ff1690602001356001600160a01b031661190e565b610352600480360360208110156106fd57600080fd5b50356001600160a01b0316611cf7565b6103526004803603602081101561072357600080fd5b50356001600160a01b0316611d0c565b6102836004803603602081101561074957600080fd5b50356001600160a01b0316611d21565b61031a6004803603602081101561076f57600080fd5b50356001600160a01b0316611d90565b61047b6004803603602081101561079557600080fd5b50356001600160a01b0316611da2565b6001600160a01b03811660009081526004602052604090205460ff16610801576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b336000908152600a602052604090205460ff16610854576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6019548211156108955760405162461bcd60e51b81526004018080602001828103825260328152602001806122ed6032913960400191505060405180910390fd5b601a546108a29083611dba565b601a556108b96001600160a01b0382163384611dca565b601a5460408051848152602081019290925280516001600160a01b038416927fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb92908290030190a25050565b600c818154811061091557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461097c576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b8115610a44576001600160a01b0383161515806109965750805b6109df576040805162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b604482015290519081900360640190fd5b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055610a60565b600180546001600160a01b0319166001600160a01b0385161790555b505050565b60126020526000908152604090205481565b60076020526000908152604090205460ff1681565b6001600160a01b03821660009081526004602052604081205460ff1615610b3557610ab78383610edd565b6002546040805163cadf338f60e01b81526004810184905290519293506001600160a01b039091169163cadf338f91602480820192602092909190829003018186803b158015610b0657600080fd5b505afa158015610b1a573d6000803e3d6000fd5b505050506040513d6020811015610b3057600080fd5b505190505b92915050565b6000546001600160a01b03163314610b88576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b60188190556040805182815290517f6b68f8105c24aac095a14cbf35ee50bd16d6e3decd7838a52e517d7928a322669181900360200190a150565b60195490565b6002546001600160a01b031681565b6009818154811061091557600080fd5b601a5481565b6001546001600160a01b0316338114610c4e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b60146020526000908152604090205460ff1681565b60046020526000908152604090205460ff1681565b6006818154811061091557600080fd5b60056020526000908152604090205463ffffffff1681565b60185481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600f818154811061091557600080fd5b600a6020526000908152604090205460ff1681565b6001600160a01b03811660009081526004602052604090205460ff16610dad576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b336000908152600a602052604090205460ff16610e00576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b600082601a5410610e2057601a54610e189084611e1c565b601a55610e47565b601a54610e2e908490611e1c565b601954909150610e3e9082611dba565b6019556000601a555b610e5c6001600160a01b038316333086611e2c565b601954604080518581526020810192909252818101839052516001600160a01b038416917febea6c05316b92ad35f8bf093ede0f094709e2857db9bc550bdef9fbfd9d9b53919081900360600190a2505050565b6000546001600160a01b031681565b60195481565b60086020526000908152604090205463ffffffff1681565b6001600160a01b03821660009081526004602052604081205460ff1615610b3557611013836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610f3a57600080fd5b505afa158015610f4e573d6000803e3d6000fd5b505050506040513d6020811015610f6457600080fd5b50516040805163313ce56760e01b8152905160ff909216600a0a9161100d916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163313ce56791600480820192602092909190829003018186803b158015610fd457600080fd5b505afa158015610fe8573d6000803e3d6000fd5b505050506040513d6020811015610ffe57600080fd5b5051859060ff16600a0a611e8c565b90611eb0565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e6020526000908152604090205463ffffffff1681565b6013818154811061091557600080fd5b6001600160a01b03821660009081526004602052604081205460ff166110c2576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b60006110ce8486610edd565b90506110da8486610a8c565b91506110e68284611dba565b91506110fd6001600160a01b038516333088611e2c565b6001600160a01b03841660009081526004602052604090205460ff1615611171573360009081526007602052604090205460ff16611171576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b604080516340c10f1960e01b81523360048201526024810184905290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916340c10f1991604480830192600092919082900301818387803b1580156111df57600080fd5b505af11580156111f3573d6000803e3d6000fd5b50506019546112059250905082611dba565b60198190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2604080518681526020810183905281516001600160a01b038716927f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15928290030190a2509392505050565b600b6020526000908152604090205463ffffffff1681565b60116020526000908152604090205463ffffffff1681565b6003818154811061091557600080fd5b600080546001600160a01b0316331461130c576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b6001600160a01b03821661134c576040805162461bcd60e51b8152602060048201526002602482015261494160f01b604482015290519081900360640190fd5b60008084600581111561135b57fe5b14156114215761136e6008600785611ecf565b156113f1576001600160a01b0383166000908152600860205260409020805463ffffffff191690556113a1600684611fc8565b6113f157600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152600760205260409020805460ff81161560ff19909116811790915561188c565b600184600581111561142f57fe5b14156114f557611442600b600a85611ecf565b156114c5576001600160a01b0383166000908152600b60205260409020805463ffffffff19169055611475600984611fc8565b6114c557600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152600a60205260409020805460ff81161560ff19909116811790915561188c565b600284600581111561150357fe5b14156115c9576115166005600485611ecf565b15611599576001600160a01b0383166000908152600560205260409020805463ffffffff19169055611549600384611fc8565b61159957600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152600460205260409020805460ff81161560ff19909116811790915561188c565b60038460058111156115d757fe5b14156116da576115ea600e600d85611ecf565b156116aa57600c80546001810182557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319166001600160a01b0386169081179091556000908152600e60205260409020805463ffffffff1916905561165a9084611fc8565b6116aa57600c80546001810182556000919091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152600d60205260409020805460ff81161560ff19909116811790915561188c565b60048460058111156116e857fe5b14156117ae576116fb6011601085611ecf565b1561177e576001600160a01b0383166000908152601160205260409020805463ffffffff1916905561172e600f84611fc8565b61177e57600f80546001810182556000919091527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152601060205260409020805460ff81161560ff19909116811790915561188c565b60058460058111156117bc57fe5b1415611882576117cf6015601485611ecf565b15611852576001600160a01b0383166000908152601560205260409020805463ffffffff19169055611802601384611fc8565b61185257601380546001810182556000919091527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152601460205260409020805460ff81161560ff19909116811790915561188c565b6000915050610b35565b83600581111561189857fe5b604080516001600160a01b0386168152831515602082015281517f0dcacb7e392f3d6a216ed2660e3dcfd40b7793d33591db2ba185a6b8e44fc477929181900390910190a25060019392505050565b60176020526000908152604090205463ffffffff1681565b6001546001600160a01b031681565b600080546001600160a01b0316331461195c576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b6001600160a01b03821661199c576040805162461bcd60e51b8152602060048201526002602482015261494160f01b604482015290519081900360640190fd5b60008360058111156119aa57fe5b1415611a19576119e463ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152600860205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6001836005811115611a2757fe5b1415611a9657611a6163ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152600b60205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6002836005811115611aa457fe5b1415611b1357611ade63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152600560205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6003836005811115611b2157fe5b1415611ba457611b6f611b5f63ffffffff7f000000000000000000000000000000000000000000000000000000000000000081169060029061203116565b63ffffffff428116919061201816565b6001600160a01b0383166000908152600e60205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6004836005811115611bb257fe5b1415611c2157611bec63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152601160205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6005836005811115611c2f57fe5b1415611c9e57611c6963ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152601560205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b506000610b35565b826005811115611cb257fe5b604080516001600160a01b038516815290517f0e4f2c4b5bc209d509bc3d49348c787fefadc66a79351b470599ac0f5be52eaf9181900360200190a250600192915050565b600d6020526000908152604090205460ff1681565b60106020526000908152604090205460ff1681565b6000546001600160a01b03163314611d6e576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60166020526000908152604090205481565b60156020526000908152604090205463ffffffff1681565b80820182811015610b3557600080fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610a60908490612073565b80820382811115610b3557600080fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611e86908590612073565b50505050565b6000821580611ea757505081810281838281611ea457fe5b04145b610b3557600080fd5b6000808211611ebe57600080fd5b818381611ec757fe5b049392505050565b6001600160a01b03811660009081526020839052604081205460ff16611fbe576001600160a01b03821660009081526020859052604090205463ffffffff16611f4c576040805162461bcd60e51b815260206004820152600a6024820152694d75737420717565756560b01b604482015290519081900360640190fd5b6001600160a01b03821660009081526020859052604090205463ffffffff42811691161115611fb6576040805162461bcd60e51b8152602060048201526011602482015270145d595d59481b9bdd08195e1c1a5c9959607a1b604482015290519081900360640190fd5b506001611013565b5060009392505050565b6000805b8354811015611fbe57826001600160a01b0316848281548110611feb57fe5b6000918252602090912001546001600160a01b03161415612010576001915050610b35565b600101611fcc565b80820163ffffffff8084169082161015610b3557600080fd5b600063ffffffff83161580611ea757508163ffffffff168363ffffffff1683850292508263ffffffff168161206257fe5b0463ffffffff1614610b3557600080fd5b60606120c8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121249092919063ffffffff16565b805190915015610a60578080602001905160208110156120e757600080fd5b5051610a605760405162461bcd60e51b815260040180806020018281038252602a81526020018061233f602a913960400191505060405180910390fd5b6060612133848460008561213b565b949350505050565b6060612146856122e6565b612197576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106121d65780518252601f1990920191602091820191016121b7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612238576040519150601f19603f3d011682016040523d82523d6000602084013e61223d565b606091505b509150915081156122515791506121339050565b8051156122615780518082602001fd5b8360405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156122ab578181015183820152602001612293565b50505050905090810190601f1680156122d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b3b15159056fe43616e6e6f74207769746864726177206d6f7265207468616e2074726561737572792063757272656e746c7920686f6c64734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212201f014bbc873f029968b2c234b36aab4c4ebe2d7f4cd156c58718a95502cfc16764736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102525760003560e01c806389e36bc611610146578063cd85641a116100c3578063e83afee311610087578063e83afee3146106b8578063ebd83cd8146106e7578063ee4e19a11461070d578063f15df14d14610733578063f4f3683e14610759578063fb9395881461077f57610252565b8063cd85641a14610618578063d031370b1461063e578063d5e8be0d1461065b578063d9797ff41461068a578063e30c3978146106b057610252565b8063ac1f15c41161010a578063ac1f15c414610575578063b1bd38b01461057d578063b5b1d560146105a3578063bc157ac1146105c0578063c24ad43e146105f257610252565b806389e36bc6146104e75780638da5cb5b146105135780638f840ddd1461051b578063932cc8c314610523578063a60cf5ac1461054957610252565b8063455fd623116101d4578063788c6c0111610198578063788c6c011461045557806378abafaf146104945780637a8960d81461049c578063869871bf146104a457806387d67dff146104c157610252565b8063455fd623146103dc5780634e71e0c8146103e45780634e83423c146103ec57806368c31dd5146104125780636b5e40a71461043857610252565b80631eec5a9a1161021b5780631eec5a9a146103665780631f107a4514610392578063242693d3146103af57806331dad7af146103b7578063437f7912146103bf57610252565b8062f714ce146102575780630619aff114610285578063078dfbe7146102be578063094a8651146102f4578063124154ca1461032c575b600080fd5b6102836004803603604081101561026d57600080fd5b50803590602001356001600160a01b03166107a5565b005b6102a26004803603602081101561029b57600080fd5b5035610905565b604080516001600160a01b039092168252519081900360200190f35b610283600480360360608110156102d457600080fd5b506001600160a01b0381351690602081013515159060400135151561092f565b61031a6004803603602081101561030a57600080fd5b50356001600160a01b0316610a65565b60408051918252519081900360200190f35b6103526004803603602081101561034257600080fd5b50356001600160a01b0316610a77565b604080519115158252519081900360200190f35b61031a6004803603604081101561037c57600080fd5b506001600160a01b038135169060200135610a8c565b610283600480360360208110156103a857600080fd5b5035610b3b565b61031a610bc3565b6102a2610bc9565b6102a2600480360360208110156103d557600080fd5b5035610bd8565b61031a610be8565b610283610bee565b6103526004803603602081101561040257600080fd5b50356001600160a01b0316610cb0565b6103526004803603602081101561042857600080fd5b50356001600160a01b0316610cc5565b6102a26004803603602081101561044e57600080fd5b5035610cda565b61047b6004803603602081101561046b57600080fd5b50356001600160a01b0316610cea565b6040805163ffffffff9092168252519081900360200190f35b61031a610d02565b61047b610d08565b6102a2600480360360208110156104ba57600080fd5b5035610d2c565b610352600480360360208110156104d757600080fd5b50356001600160a01b0316610d3c565b610283600480360360408110156104fd57600080fd5b50803590602001356001600160a01b0316610d51565b6102a2610eb0565b61031a610ebf565b61047b6004803603602081101561053957600080fd5b50356001600160a01b0316610ec5565b61031a6004803603604081101561055f57600080fd5b506001600160a01b038135169060200135610edd565b6102a261101a565b61047b6004803603602081101561059357600080fd5b50356001600160a01b031661103e565b6102a2600480360360208110156105b957600080fd5b5035611056565b61031a600480360360608110156105d657600080fd5b508035906001600160a01b036020820135169060400135611066565b61047b6004803603602081101561060857600080fd5b50356001600160a01b031661127e565b61047b6004803603602081101561062e57600080fd5b50356001600160a01b0316611296565b6102a26004803603602081101561065457600080fd5b50356112ae565b6103526004803603604081101561067157600080fd5b50803560ff1690602001356001600160a01b03166112be565b61047b600480360360208110156106a057600080fd5b50356001600160a01b03166118e7565b6102a26118ff565b610352600480360360408110156106ce57600080fd5b50803560ff1690602001356001600160a01b031661190e565b610352600480360360208110156106fd57600080fd5b50356001600160a01b0316611cf7565b6103526004803603602081101561072357600080fd5b50356001600160a01b0316611d0c565b6102836004803603602081101561074957600080fd5b50356001600160a01b0316611d21565b61031a6004803603602081101561076f57600080fd5b50356001600160a01b0316611d90565b61047b6004803603602081101561079557600080fd5b50356001600160a01b0316611da2565b6001600160a01b03811660009081526004602052604090205460ff16610801576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b336000908152600a602052604090205460ff16610854576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b6019548211156108955760405162461bcd60e51b81526004018080602001828103825260328152602001806122ed6032913960400191505060405180910390fd5b601a546108a29083611dba565b601a556108b96001600160a01b0382163384611dca565b601a5460408051848152602081019290925280516001600160a01b038416927fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb92908290030190a25050565b600c818154811061091557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461097c576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b8115610a44576001600160a01b0383161515806109965750805b6109df576040805162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b604482015290519081900360640190fd5b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055610a60565b600180546001600160a01b0319166001600160a01b0385161790555b505050565b60126020526000908152604090205481565b60076020526000908152604090205460ff1681565b6001600160a01b03821660009081526004602052604081205460ff1615610b3557610ab78383610edd565b6002546040805163cadf338f60e01b81526004810184905290519293506001600160a01b039091169163cadf338f91602480820192602092909190829003018186803b158015610b0657600080fd5b505afa158015610b1a573d6000803e3d6000fd5b505050506040513d6020811015610b3057600080fd5b505190505b92915050565b6000546001600160a01b03163314610b88576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b60188190556040805182815290517f6b68f8105c24aac095a14cbf35ee50bd16d6e3decd7838a52e517d7928a322669181900360200190a150565b60195490565b6002546001600160a01b031681565b6009818154811061091557600080fd5b601a5481565b6001546001600160a01b0316338114610c4e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b60146020526000908152604090205460ff1681565b60046020526000908152604090205460ff1681565b6006818154811061091557600080fd5b60056020526000908152604090205463ffffffff1681565b60185481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600f818154811061091557600080fd5b600a6020526000908152604090205460ff1681565b6001600160a01b03811660009081526004602052604090205460ff16610dad576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b336000908152600a602052604090205460ff16610e00576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b600082601a5410610e2057601a54610e189084611e1c565b601a55610e47565b601a54610e2e908490611e1c565b601954909150610e3e9082611dba565b6019556000601a555b610e5c6001600160a01b038316333086611e2c565b601954604080518581526020810192909252818101839052516001600160a01b038416917febea6c05316b92ad35f8bf093ede0f094709e2857db9bc550bdef9fbfd9d9b53919081900360600190a2505050565b6000546001600160a01b031681565b60195481565b60086020526000908152604090205463ffffffff1681565b6001600160a01b03821660009081526004602052604081205460ff1615610b3557611013836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610f3a57600080fd5b505afa158015610f4e573d6000803e3d6000fd5b505050506040513d6020811015610f6457600080fd5b50516040805163313ce56760e01b8152905160ff909216600a0a9161100d916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163313ce56791600480820192602092909190829003018186803b158015610fd457600080fd5b505afa158015610fe8573d6000803e3d6000fd5b505050506040513d6020811015610ffe57600080fd5b5051859060ff16600a0a611e8c565b90611eb0565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e6020526000908152604090205463ffffffff1681565b6013818154811061091557600080fd5b6001600160a01b03821660009081526004602052604081205460ff166110c2576040805162461bcd60e51b815260206004820152600c60248201526b139bdd081858d8d95c1d195960a21b604482015290519081900360640190fd5b60006110ce8486610edd565b90506110da8486610a8c565b91506110e68284611dba565b91506110fd6001600160a01b038516333088611e2c565b6001600160a01b03841660009081526004602052604090205460ff1615611171573360009081526007602052604090205460ff16611171576040805162461bcd60e51b815260206004820152600c60248201526b139bdd08185c1c1c9bdd995960a21b604482015290519081900360640190fd5b604080516340c10f1960e01b81523360048201526024810184905290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916340c10f1991604480830192600092919082900301818387803b1580156111df57600080fd5b505af11580156111f3573d6000803e3d6000fd5b50506019546112059250905082611dba565b60198190556040517f93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d6690600090a2604080518681526020810183905281516001600160a01b038716927f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15928290030190a2509392505050565b600b6020526000908152604090205463ffffffff1681565b60116020526000908152604090205463ffffffff1681565b6003818154811061091557600080fd5b600080546001600160a01b0316331461130c576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b6001600160a01b03821661134c576040805162461bcd60e51b8152602060048201526002602482015261494160f01b604482015290519081900360640190fd5b60008084600581111561135b57fe5b14156114215761136e6008600785611ecf565b156113f1576001600160a01b0383166000908152600860205260409020805463ffffffff191690556113a1600684611fc8565b6113f157600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152600760205260409020805460ff81161560ff19909116811790915561188c565b600184600581111561142f57fe5b14156114f557611442600b600a85611ecf565b156114c5576001600160a01b0383166000908152600b60205260409020805463ffffffff19169055611475600984611fc8565b6114c557600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152600a60205260409020805460ff81161560ff19909116811790915561188c565b600284600581111561150357fe5b14156115c9576115166005600485611ecf565b15611599576001600160a01b0383166000908152600560205260409020805463ffffffff19169055611549600384611fc8565b61159957600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152600460205260409020805460ff81161560ff19909116811790915561188c565b60038460058111156115d757fe5b14156116da576115ea600e600d85611ecf565b156116aa57600c80546001810182557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319166001600160a01b0386169081179091556000908152600e60205260409020805463ffffffff1916905561165a9084611fc8565b6116aa57600c80546001810182556000919091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152600d60205260409020805460ff81161560ff19909116811790915561188c565b60048460058111156116e857fe5b14156117ae576116fb6011601085611ecf565b1561177e576001600160a01b0383166000908152601160205260409020805463ffffffff1916905561172e600f84611fc8565b61177e57600f80546001810182556000919091527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152601060205260409020805460ff81161560ff19909116811790915561188c565b60058460058111156117bc57fe5b1415611882576117cf6015601485611ecf565b15611852576001600160a01b0383166000908152601560205260409020805463ffffffff19169055611802601384611fc8565b61185257601380546001810182556000919091527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b0319166001600160a01b0385161790555b506001600160a01b0382166000908152601460205260409020805460ff81161560ff19909116811790915561188c565b6000915050610b35565b83600581111561189857fe5b604080516001600160a01b0386168152831515602082015281517f0dcacb7e392f3d6a216ed2660e3dcfd40b7793d33591db2ba185a6b8e44fc477929181900390910190a25060019392505050565b60176020526000908152604090205463ffffffff1681565b6001546001600160a01b031681565b600080546001600160a01b0316331461195c576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b6001600160a01b03821661199c576040805162461bcd60e51b8152602060048201526002602482015261494160f01b604482015290519081900360640190fd5b60008360058111156119aa57fe5b1415611a19576119e463ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152600860205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6001836005811115611a2757fe5b1415611a9657611a6163ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152600b60205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6002836005811115611aa457fe5b1415611b1357611ade63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152600560205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6003836005811115611b2157fe5b1415611ba457611b6f611b5f63ffffffff7f000000000000000000000000000000000000000000000000000000000000000081169060029061203116565b63ffffffff428116919061201816565b6001600160a01b0383166000908152600e60205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6004836005811115611bb257fe5b1415611c2157611bec63ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152601160205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b6005836005811115611c2f57fe5b1415611c9e57611c6963ffffffff428116907f00000000000000000000000000000000000000000000000000000000000000009061201816565b6001600160a01b0383166000908152601560205260409020805463ffffffff191663ffffffff92909216919091179055611ca6565b506000610b35565b826005811115611cb257fe5b604080516001600160a01b038516815290517f0e4f2c4b5bc209d509bc3d49348c787fefadc66a79351b470599ac0f5be52eaf9181900360200190a250600192915050565b600d6020526000908152604090205460ff1681565b60106020526000908152604090205460ff1681565b6000546001600160a01b03163314611d6e576040805162461bcd60e51b8152602060048201819052602482015260008051602061231f833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60166020526000908152604090205481565b60156020526000908152604090205463ffffffff1681565b80820182811015610b3557600080fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610a60908490612073565b80820382811115610b3557600080fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611e86908590612073565b50505050565b6000821580611ea757505081810281838281611ea457fe5b04145b610b3557600080fd5b6000808211611ebe57600080fd5b818381611ec757fe5b049392505050565b6001600160a01b03811660009081526020839052604081205460ff16611fbe576001600160a01b03821660009081526020859052604090205463ffffffff16611f4c576040805162461bcd60e51b815260206004820152600a6024820152694d75737420717565756560b01b604482015290519081900360640190fd5b6001600160a01b03821660009081526020859052604090205463ffffffff42811691161115611fb6576040805162461bcd60e51b8152602060048201526011602482015270145d595d59481b9bdd08195e1c1a5c9959607a1b604482015290519081900360640190fd5b506001611013565b5060009392505050565b6000805b8354811015611fbe57826001600160a01b0316848281548110611feb57fe5b6000918252602090912001546001600160a01b03161415612010576001915050610b35565b600101611fcc565b80820163ffffffff8084169082161015610b3557600080fd5b600063ffffffff83161580611ea757508163ffffffff168363ffffffff1683850292508263ffffffff168161206257fe5b0463ffffffff1614610b3557600080fd5b60606120c8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121249092919063ffffffff16565b805190915015610a60578080602001905160208110156120e757600080fd5b5051610a605760405162461bcd60e51b815260040180806020018281038252602a81526020018061233f602a913960400191505060405180910390fd5b6060612133848460008561213b565b949350505050565b6060612146856122e6565b612197576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106121d65780518252601f1990920191602091820191016121b7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612238576040519150601f19603f3d011682016040523d82523d6000602084013e61223d565b606091505b509150915081156122515791506121339050565b8051156122615780518082602001fd5b8360405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156122ab578181015183820152602001612293565b50505050905090810190601f1680156122d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b3b15159056fe43616e6e6f74207769746864726177206d6f7265207468616e2074726561737572792063757272656e746c7920686f6c64734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212201f014bbc873f029968b2c234b36aab4c4ebe2d7f4cd156c58718a95502cfc16764736f6c63430007050033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addBack(uint256,address)": {
        "params": {
          "_amount": "uint",
          "_token": "address"
        }
      },
      "convertToken(address,uint256)": {
        "params": {
          "_amount": "uint",
          "_token": "address"
        },
        "returns": {
          "value_": "uint"
        }
      },
      "deposit(uint256,address,uint256)": {
        "params": {
          "_amount": "uint",
          "_fee": "uint",
          "_token": "address"
        },
        "returns": {
          "send_": "uint"
        }
      },
      "getTotalReserves()": {
        "returns": {
          "_0": "totalReserves uint"
        }
      },
      "queue(uint8,address)": {
        "params": {
          "_address": "address",
          "_managing": "MANAGING"
        },
        "returns": {
          "_0": "bool"
        }
      },
      "setWarrantDepository(address)": {
        "params": {
          "_depo": "address"
        }
      },
      "toggle(uint8,address)": {
        "params": {
          "_address": "address",
          "_managing": "MANAGING"
        },
        "returns": {
          "_0": "bool"
        }
      },
      "transferOwnership(address,bool,bool)": {
        "params": {
          "direct": "True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.",
          "newOwner": "Address of the new owner.",
          "renounce": "Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise."
        }
      },
      "valueOf(address,uint256)": {
        "params": {
          "_amount": "uint",
          "_token": "address"
        },
        "returns": {
          "value_": "uint"
        }
      },
      "withdraw(uint256,address)": {
        "params": {
          "_amount": "uint",
          "_token": "address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addBack(uint256,address)": {
        "notice": "allow approved address to add funds back in treasury"
      },
      "claimOwnership()": {
        "notice": "Needs to be called by `pendingOwner` to claim ownership."
      },
      "convertToken(address,uint256)": {
        "notice": "convert token decimals to match WorldOne decimals"
      },
      "deposit(uint256,address,uint256)": {
        "notice": "allow approved address to deposit an asset for WorldOne"
      },
      "getTotalReserves()": {
        "notice": "get total reserves that treasury has"
      },
      "queue(uint8,address)": {
        "notice": "queue address to change boolean in mapping"
      },
      "setWarrantDepository(address)": {
        "notice": "Set warrant depository address for treasury"
      },
      "toggle(uint8,address)": {
        "notice": "verify queue then set boolean in mapping"
      },
      "transferOwnership(address,bool,bool)": {
        "notice": "Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`."
      },
      "valueOf(address,uint256)": {
        "notice": "returns WorldOne valuation of asset"
      },
      "withdraw(uint256,address)": {
        "notice": "allow approved address to withdraw reserves"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4620,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4622,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 110,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "warrantDepository",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IWarrantDepository)3379"
      },
      {
        "astId": 113,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "reserveTokens",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 117,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "isReserveToken",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 121,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "reserveTokenQueue",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 124,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "reserveDepositors",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 128,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "isReserveDepositor",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 132,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "reserveDepositorQueue",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 135,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "reserveSpenders",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 139,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "isReserveSpender",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 143,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "reserveSpenderQueue",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 146,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "reserveManagers",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 150,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "isReserveManager",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 154,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "ReserveManagerQueue",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 157,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "debtors",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 161,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "isDebtor",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 165,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "debtorQueue",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 169,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "debtorBalance",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 172,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "rewardManagers",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 176,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "isRewardManager",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 180,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "rewardManagerQueue",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 184,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "hourlyLimitAmounts",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 188,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "hourlyLimitQueue",
        "offset": 0,
        "slot": "23",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 190,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "limitAmount",
        "offset": 0,
        "slot": "24",
        "type": "t_uint256"
      },
      {
        "astId": 192,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "totalReserves",
        "offset": 0,
        "slot": "25",
        "type": "t_uint256"
      },
      {
        "astId": 194,
        "contract": "contracts/Treasury.sol:WorldOneTreasury",
        "label": "totalWithdraw",
        "offset": 0,
        "slot": "26",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IWarrantDepository)3379": {
        "encoding": "inplace",
        "label": "contract IWarrantDepository",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_address,t_uint32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}